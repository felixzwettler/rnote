on:
  push:
    branches:
    - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

name: CI

jobs:
  check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    container: fedora:37
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo dnf upgrade --refresh -y
          sudo dnf install -y gcc gcc-c++ clang python3 make cmake meson kernel-devel gtk4-devel libadwaita-devel poppler-glib-devel poppler-data alsa-lib-devel libappstream-glib desktop-file-utils
      - name: Install toolchain
        id: toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Cache
        uses: actions/cache@v3
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 10
        with:
          path: |
            _mesonbuild/cargo-home/bin/
            _mesonbuild/cargo-home/registry/index/
            _mesonbuild/cargo-home/registry/cache/
            _mesonbuild/cargo-home/git/db/
            _mesonbuild/target/
          key: cargo-${{ runner.os }}-${{ steps.toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}-${{ github.workflow_sha }}
          restore-keys: cargo-${{ runner.os }}-${{ steps.toolchain.outputs.cachekey }}
      - name: Configure
        run: |
          meson setup --prefix=/usr _mesonbuild
          meson configure -Dprofile=devel -Dcli=true _mesonbuild
      - name: Run cargo fmt
        run: meson compile cargo-fmt-check -C _mesonbuild
      - name: Compile
        run: meson compile -v -C _mesonbuild
      - name: Install
        run: meson install -C _mesonbuild
      - name: Run meson tests
        run: meson test -v -C _mesonbuild
      - name: Run clippy for app
        run: meson compile app-cargo-clippy -C _mesonbuild
        continue-on-error: true
      - name: Run clippy for CLI
        run: meson compile cli-cargo-clippy -C _mesonbuild
        continue-on-error: true
      - name: Run file compatibility tests
        run: |
          rnote_cli test\
            misc/file-tests/v0-5-13-overview.rnote\
            misc/file-tests/v0-5-13-pdf_annotation.rnote\
            misc/file-tests/v0-5-13-lecture_note_1.rnote\
            misc/file-tests/v0-5-13-lecture_note_2.rnote